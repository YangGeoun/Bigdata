"""
<성능 규제>
 - 성능(과적합 여부 포함)을 높이기 위한 방법
 - 보통 전처리 계층을 사용하게 됩니다.
 - 전처리 계층은 훈련에 영향을 미치지 않습니다.

<성능 규제 방법>
 * Dropout(드롭아웃) 방법을 사용함
  - 훈련 과정 중에 일부 특성들을 랜덤하게 제외 시켜서 과대/과소 적합을 해소하는 방법
  - 딥러닝에서 자주 사용되는 전처리 계층으로 성능 개선에 효율적으로 사용됨
  - 주로 과대적합이 발생한 경우에 사용하면 일반화에 효과가 있음
    (드롭아웃은 조금 멍청하게 만드는 개념입니다.)
  
 * Dropout 적용방법
  - 은닉계층(Hidden Layer)으로 추가하여 주로 사용됨
  - 제외시킬 값을 비율로 정의 합니다.
"""



============================================================



"""
<최적화 시점의 모델 저장>
 - 훈련 반복 중 가장 좋은 시점(손실이 적거나, 더이상 손실이 낮아지지 않는 시점)에
   모델을 저장해서 사용하는 방법을 의미합니다.
 
<저장 방법>
 1. 최적의 모델이 훈련 중 사용한 가중치만 저장하는 방법
    - 훈련 중 손실을 줄이기 위해 모델이 스스로 찾아낸 가중치 값들
    - 읽어들이는 순서
       -- 모델 생성 > 저장된 가중치 읽어들여서 적용 > 예측 진행
          (훈련 fit은 별도로 하지 않습니다)
          
 2. 최적의 모델 자체를 저장하는 방법
    - 훈련 최종 결과물 모델 자체를 저장합니다.
    - 읽어들이는 순서
       -- 모델 읽어들이기 > 예측 진행
          (별도로 모델 생성 및 훈련을 하지 않아도 됩니다.)
"""



============================================================



"""
<콜백(Callback) 함수>
 - 모델 훈련 중에 특정 작업(함수)을 호출(call)하여 수행하고자 할 때 사용
 - 훈련 시에 fit 함수에 적용하여 사용합니다.
 - 훈련 중에 발생시키는 함수라는 의미로 -> "이벤트(event) 함수"라고도 칭합니다.
 - 별도의 계층은 아니며, fit함수의 속성(매개변수)로 사용됩니다.

<콜백(Callback) 함수 종류>
 1. ModelCheckpoint() 함수 : 모델(model) 확인(check) 시점(point) 확인 함수
  - epoch 마다 모델을 저장하는 기능을 수행하는 함수
  - 단, 이전 epoch에서 실행된 훈련 성능보다 높아진 경우에만 저장됨
 
 2. EaralyStopping() 함수 : 조기(earaly) 종료(stopping) 함수
  - 훈련이 더 이상 좋와지지 않으면(loss 기준) 훈련을 종료시키는 함수
  - 일반적으로 ModelCheckpoint()와 함께 사용함
"""








