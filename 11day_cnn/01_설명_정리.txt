"""
<합성곱신경망(Convolutional Neural Network, CNN)>
 - 이미지 분석에 주로 사용되는 대표적 계층
 - 기존의 인공신경망에서의 이미지 분석시에는 높이와 너비를 1차원으로 사용하였다면,
   -> 합성곱신경망(CNN)은 원형 그대로의 높이와 너비 2차원을 사용
 - 합성곱신경망(CNN)에서 사용하는 훈련에 사용하는 차원은 4차원을 사용합니다.
   --> 4차원 = (행의갯수, 높이, 너비, 채널)
   --> 채널 : 이미지의 색상(흑백 또는 컬러)을 의미합니다.
            : 흑백은 1의 값, 컬러는 RGB의 3의 값을 사용합니다.
 - 우리가 사용하는 패션 이미지 데이터는 흑백 사진 픽셀 데이터 입니다.
 
<합성곱신경망(CNN)을 사용하는 이유>
 - 기존 이미지 분석 시 높이와 너비를 곱하여 사용하게되면,
  * 원형 그대로의 주변 이미지 공간 정보를 활용하지 못하는 단점이 발생
  * 이러한 이유로 트그징 추출을 잘 못하여, 학습이 잘 이루어지지 않는 경우가 발생함

 - 기존 인공신경망 모델의 단점을 보완하여 만들어진 계층이 CNN 계층입니다.
  * 원본 형태의 이미지 정보를 그대로 유지한 상태로 학습 가능한 계층임
  * 이미지의 공간("격자"라고 합니다.) 정보를 나누어서 특징을 추출합니다.
  * 인접 이미지의 특징을 포함하여 훈련됩니다.
  
<합성곱신경망(CNN) 계층구조>
 1. 입력계층 : 아래 2번, 3번, 5번은 입력계층으로 사용 가능
 2. 합성곱계층(CNN)
   - 이미지 특징을 추출하는 계층
 3. 활성화 함수 계층(은닉계층-Hidden Layer)
 4. 풀링계층(Pooling Layer)
  - 공간 크기를 줄이고 계산량을 감소시키기 위한 계층(중요 특징만 추출하는 계층)
  - 머신러닝에서 주성분분석(PCA)와 유사한 기능
  - 풀링방법 : 최대풀링(Max Pooling), 평균풀링(Average Pooling)
  - 주로 최대풀링(Max Pooling) 사용
 5. 완전 연결 계층(은니계층-Hidden Layer)
  - 추출된 특징을 이용해서 최종 예측 전 수행하는 계층
  - 이때는 기존의 방법과 동일하게 1차원(높이*너비)의 전처리 계층(Plattern)을
    사용하는 경우도 있음(인공신경망 구조와 동일하게 진행)
 6. 출력계층
 
 ** CNN계층에서는 2~4번 계층구조가 일반적으로 사용되며,
    나머지 계층은 기존 인공신경망 구조를 따름
     --> 2~4번 구조셋트가 여러개 포함 될 수 있음
  
"""


=============================================


"""
<합성곱신경망(CNN) 계층 속성>
 - CNN은 데이터와 필터(filter)가 곱해진다고 해서 합성곱이라는 단어가 생겨났습니다.
 - 이미지와 같은 2차원(높이 * 너비) 데이터 분류에는 보통 2차원 합성곱(Conv2D) 사용
 - 입력 계층으로 사용하는 경우에는 input_shape() 사용
 
 (kernel_size, 커널사이즈)
  - 이미지를 훓으면서 특징을 추출하는 역할을 수행
  - 필터에서 사용할 사이즈를 정의함
  - kernel_size = 3의 의미 : 필터가 사용할 사이즈는 3행 3열로 특징 추출 진행
                             (3행 3열을 줄여서 3이라고 정의)
  - kernel_size는 홀수로 정의 : 보통 3, 5, 7, 9..(주로 3, 5를 사용)
  
 (filters, 필터)
  - 데이터를 훓으면서(strides) 특징을 추출하는 역할을 함(필터링 개념)
  - 필터의 값이 클수록 훈련 속도가 오래 걸림
  - 보통 32, 64가 주로 사용됨
  - CNN계층을 여러개 사용하는 경우에는 처음 CNN계층에는 작은값부터 시작..
    -> 16, 32, 64, 128...정도가 주로  사용됨
  - 필터의 갯수는 해당 레이어에서의 출력 갯수가 됨
  
(padding, 패팅)
 - 경계 처리 방식을 정의
 - 커널 사이즈에 대한 원본 사이즈가 부적합할 경우 주변 픽셀을 만들어서 사용하는 방법
 - 입력(이미지 높이 * 너비) 데이터의 주변에 추가되는 가상의 공간을 만듬
 - 패딩을 사용하지 않으면, 중복이 일어나지 않은 픽셀값들이 발생함(처음과 마지막 픽셀들)
   (중복이 일어나지 않으면 특징 추출 시 정밀성이 떨어짐)
   --> 따라서, 중복을 허용할 수 있도록 하기 위해 주변에 가상공간을 두어서 하는 경우가 있음
 - 처리 방식 : same과 valid가 있음
  * same : 패팅을 사용하여 입력과 출력의 크기를 동일하게 만들어서 훈련하고자 할때 사용
  * valid : 패팅을 사용하지 않음을 의미함
  * same을 주로 사용하도록 권장하고 있음
  
(strides, 스트라이드)
 - 커널 사이즈에 해당하는 필터가 이미지 데이터의 특징을 추출하기 위해 이동하는 간격 정의
 - 특징 추출을 위한 이동 순서 : 왼쪽에서 -> 오른쪽, 위에서 -> 아래로
 - strides=1의 의미 : 오른쪽으로 1씩, 아래로 1씩 이동한다는 의미
"""


========================================



"""
<풀링계층(Pooling Layer)>
 - CNN 계층 추가 이후에 일반적으로 함께 사용되는 계층
 - CNN 계층에서 추출된 특징들 중에 중요한 정보만을 추출하는 계층
 - 머신러닝의 주성분분석(PCA)과 유사한 개념
 
 - 이미지를 구성하는 픽셀들이, 주변 픽셀들끼리는 유사한 정보를 가진다는 개념에서 접근
 - 중복된 값들이나 유사한 값들을 대표하는 값들, 즉 중요한 특징을 가지는 값들만 추출
 - 과적합 방지에 효율적으로 사용되며, 
 - 훈련에 참여하지는 않는 "전처리 계층" 입니다.
 
<MaxPool2D>
 - 사소한 값들(특징이 약한 값들)은 무시하고, 최대값의 특징들만 추출하는 방식
 - pool_size=2 : 2행 2열의 공간에 중요 특징들만 저장하라는 의미
 - strides=2 : CNN에서 추출한 특징값들은 행렬 구조 데이터로,
               2행2열의 공간을 이용하여 오른쪽으로 2칸씩, 아래로 2칸씩 움직이면서 추출
             : 디폴트(기본값)은 2..
 - 풀링 계층으로 대표적으로 사용되는 계층입니다.
"""


