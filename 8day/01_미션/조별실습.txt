"""
<조별 실습 내용>
* 실습주제 : 에너지 사용 패턴 확인을 통한 에너지 부하 타입 분류하기
* 사용데이터 : Steel_industry_data.csv


<필수 포함 사항>-------------------------------------------
* 가상공간 및 가상공간에 대한 커널을 새로 생성하여 라이브러리 설치 후 실습 진행
  - 가상공간 이름 : 조별로 이름을 정하기
  - 가상공간에 대한 커널 이름 : 가상공간이름_kernel
  - 가상공간 생성은 (base)에서 생성해야 합니다.
  - xgboost 버전은 2.0.2로 별도로 설치하세요
     - pip install xgboost==2.0.2
     - 강의 중 사용한 아래 설정은 사용하지 말고 하세요..
        --> from sklearn import set_config
        --> set_config(display="text")
  - 각 조별로 조원들은 각자 개인 PC에 위 내용과 동일하게 적용하여 아래 수행

* 모든 코드들은 주석(설명)을 작성

* 모든 특성(컬럼)의 데이터 내에 문자열 값들은 정수값으로 변환하여 사용(0, 1, 2 ....)
  - 변화시 replace() 함수 사용

* 전처리 : 결측, 중복, 이상치 데이터 확인 및 처리
            : 각각 확인을 위한 상세한 코드 작성하여 확인
              (예를 들어 -> 결측데이터 확인을 위해서 null 체크 코드 작성하여 확인)
            : 이상치의 경우 -> 시각화가 필요한 경우 시각화를 포함하여 확인 
                                    (시각화 결과 해석 내용 포함)
            : 이상치의 경우 -> 산술식(공식)을 통해 확인이 필요한 경우 
                                    산술식에 필요한 값들을 추출 및 계산하여 직접 데이터 확인
 
* 상관관계 매트릭스 분석 및 매트릭스를 시각화(히트맵 및 산점행렬도 모두 시각화)하기
   -> 상관관계 분석 및 시각화 결과를 기준으로 특성간 비교에 대해 해석 내용 포함

* 상관관계 검증(스피어만, 피어슨 모두 각각 검증)
   -> 각 검증 결과의 특성들 각각에 대한 해석 내용 포함

* 훈련 시 데이터는 훈련:검증:테스트=6:2:2로 분리하여 사용

* 정규화 및 표준화(Standrd, MinMax, Robust) 모두 처리
   (각 스케일링 데이터를 이용하여 아래 내용을 각각 진행)

* 각 모델 학습 후 과적합 여부 확인
   -> 각 모델별로 과적합 여부에 대한 해석 내용 포함

* 분류 성능평가(평가 지표 모두)
  - 훈련데이터 및 검증데이터에 대한 성능평가를 모두 진행 
   -> 각 지표 결과에 대해 해석 내용 포함

* 오차행렬표, 혼동행렬도 시각화
   -> 시각화 결과에 대해 해석 내용 포함

* 머신러닝 분류모델 전체에 대한 하이퍼파라메터 튜닝 진행
   (각 스케일링 데이터별로, 튜닝 전과 튜닝 후에 대하여 위의 모든 과정을 진행하시면 됩니다.)

* 각 하이퍼파라메터 범위는 아래 샘플을 이용(자유롭게 수정 가능)
  - 평가 기준 : 정확도 사용
  - cv 값은 5 사용
  - CPU의 모든 코어(Core) 사용

    if modelName =="XGBClassifier" :
        gridParams["n_estimators"] = [20,50]
        gridParams["max_depth"] = [10,20]
        gridParams["min_child_weight"] = [1, 2,4]
        
    elif modelName == "HistGradientBoostingClassifier" :
        gridParams["max_iter"] = [20, 50]
        gridParams["max_depth"] = [10, 50]
        gridParams["min_samples_leaf"] = [1,2,4]
        
    else :        
        gridParams["n_estimators"] = [20, 50]
        gridParams["max_depth"] = [10,20]
        gridParams["min_samples_split"] = [2,5,10]
        gridParams["min_samples_leaf"] = [1,2,4]


* 각 스케일링 데이터를 이용하여
   -> 튜닝 전과 후의 모든 결과를 
     --> [데이터프레임]의 행렬 데이터로 생성하기
     --> 컬럼명은 자유롭게

* 데이터프레임의 결과를 확인하여 -> 최종 가장 우수한 모델 선정
   -> 최정 모델 선정에 대해 해석 내용 포함

* 최종 선정한 모델을 파일로 저장하기


<제출 방법> -----------------------------------------
* 주피터 파일명
  - 본인이름_에너지_부하타입_분류하기_실습.ipynb

* 결과물 제출(zip으로 압축하여 제출)
  - 파일명 : 본인이름_에너지_부하타입_분류하기_실습.zip

* 제출위치 
  - 구글드라이브 > 8일차 > 02_개인별_제출
